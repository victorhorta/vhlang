Nonterminals useless in grammar

   MASSIGN


Terminals unused in grammar

   DUP
   POP
   NEG


Rules useless in grammar

   57 MASSIGN: /* empty */


Grammar

    0 $accept: P $end

    1 P: BF LDE

    2 BF: /* empty */

    3 LDE: LDE DE
    4    | DE

    5 DE: DV
    6   | B

    7 DV: VAR LI COLON T SEMI_COLON

    8 B: LEFT_BRACES LS RIGHT_BRACES

    9 T: INTEGER
   10  | FLOAT
   11  | CHAR
   12  | BOOLEAN
   13  | STRING

   14 LS: LS S
   15   | S

   16 LI: LI COMMA IDD
   17   | IDD

   18 S: IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS MTHEN S ENDIF
   19  | IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS MTHEN S ELSE MELSE S ENDIF
   20  | IDU EQUALS E SEMI_COLON
   21  | WHILE MWHILE LEFT_PARENTHESIS E RIGHT_PARENTHESIS MTHEN S
   22  | B
   23  | E SEMI_COLON
   24  | RETURN E SEMI_COLON

   25 MTHEN: /* empty */

   26 MELSE: /* empty */

   27 MWHILE: /* empty */

   28 E: E AND R
   29  | E OR R
   30  | E LESS_THAN R
   31  | E GREATER_THAN R
   32  | E LESS_OR_EQUAL R
   33  | E GREATER_OR_EQUAL R
   34  | E EQUAL_EQUAL R
   35  | E NOT_EQUAL R
   36  | E PLUS R
   37  | E MINUS R
   38  | E TIMES R
   39  | E DIVIDE R
   40  | R

   41 R: PLUS_PLUS R
   42  | MINUS_MINUS R
   43  | R PLUS_PLUS
   44  | R MINUS_MINUS
   45  | MINUS R
   46  | NOT R
   47  | TRUE
   48  | FALSE
   49  | CHARACTER
   50  | STRINGVAL
   51  | NUM
   52  | IDU

   53 NUM: NUMERALFLOAT
   54    | NUMERALINT

   55 IDD: ID

   56 IDU: ID


Terminals, with rules where they appear

$end (0) 0
error (256)
DUP (258)
POP (259)
NEG (260)
IF (261) 18 19
ELSE (262) 19
ENDIF (263) 18 19
WHILE (264) 21
RETURN (265) 24
EQUALS (266) 20
AND (267) 28
OR (268) 29
LESS_THAN (269) 30
GREATER_THAN (270) 31
LESS_OR_EQUAL (271) 32
GREATER_OR_EQUAL (272) 33
NOT_EQUAL (273) 35
EQUAL_EQUAL (274) 34
PLUS (275) 36
MINUS (276) 37 45
TIMES (277) 38
DIVIDE (278) 39
NOT (279) 46
PLUS_PLUS (280) 41 43
MINUS_MINUS (281) 42 44
INTEGER (282) 9
STRING (283) 13
FLOAT (284) 10
BOOLEAN (285) 12
CHAR (286) 11
VAR (287) 7
COLON (288) 7
SEMI_COLON (289) 7 20 23 24
COMMA (290) 16
LEFT_BRACES (291) 8
RIGHT_BRACES (292) 8
LEFT_PARENTHESIS (293) 18 19 21
RIGHT_PARENTHESIS (294) 18 19 21
ID (295) 55 56
STRINGVAL (296) 50
TRUE (297) 47
FALSE (298) 48
CHARACTER (299) 49
NUMERALFLOAT (300) 53
NUMERALINT (301) 54


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
P (48)
    on left: 1, on right: 0
BF (49)
    on left: 2, on right: 1
LDE (50)
    on left: 3 4, on right: 1 3
DE (51)
    on left: 5 6, on right: 3 4
DV (52)
    on left: 7, on right: 5
B (53)
    on left: 8, on right: 6 22
T (54)
    on left: 9 10 11 12 13, on right: 7
LS (55)
    on left: 14 15, on right: 8 14
LI (56)
    on left: 16 17, on right: 7 16
S (57)
    on left: 18 19 20 21 22 23 24, on right: 14 15 18 19 21
MTHEN (58)
    on left: 25, on right: 18 19 21
MELSE (59)
    on left: 26, on right: 19
MWHILE (60)
    on left: 27, on right: 21
E (61)
    on left: 28 29 30 31 32 33 34 35 36 37 38 39 40, on right: 18 19
    20 21 23 24 28 29 30 31 32 33 34 35 36 37 38 39
R (62)
    on left: 41 42 43 44 45 46 47 48 49 50 51 52, on right: 28 29 30
    31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46
NUM (63)
    on left: 53 54, on right: 51
IDD (64)
    on left: 55, on right: 16 17
IDU (65)
    on left: 56, on right: 20 52


State 0

    0 $accept: . P $end

    $default  reduce using rule 2 (BF)

    P   go to state 1
    BF  go to state 2


State 1

    0 $accept: P . $end

    $end  shift, and go to state 3


State 2

    1 P: BF . LDE

    VAR          shift, and go to state 4
    LEFT_BRACES  shift, and go to state 5

    LDE  go to state 6
    DE   go to state 7
    DV   go to state 8
    B    go to state 9


State 3

    0 $accept: P $end .

    $default  accept


State 4

    7 DV: VAR . LI COLON T SEMI_COLON

    ID  shift, and go to state 10

    LI   go to state 11
    IDD  go to state 12


State 5

    8 B: LEFT_BRACES . LS RIGHT_BRACES

    IF            shift, and go to state 13
    WHILE         shift, and go to state 14
    RETURN        shift, and go to state 15
    MINUS         shift, and go to state 16
    NOT           shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACES   shift, and go to state 5
    ID            shift, and go to state 20
    STRINGVAL     shift, and go to state 21
    TRUE          shift, and go to state 22
    FALSE         shift, and go to state 23
    CHARACTER     shift, and go to state 24
    NUMERALFLOAT  shift, and go to state 25
    NUMERALINT    shift, and go to state 26

    B    go to state 27
    LS   go to state 28
    S    go to state 29
    E    go to state 30
    R    go to state 31
    NUM  go to state 32
    IDU  go to state 33


State 6

    1 P: BF LDE .
    3 LDE: LDE . DE

    VAR          shift, and go to state 4
    LEFT_BRACES  shift, and go to state 5

    $default  reduce using rule 1 (P)

    DE  go to state 34
    DV  go to state 8
    B   go to state 9


State 7

    4 LDE: DE .

    $default  reduce using rule 4 (LDE)


State 8

    5 DE: DV .

    $default  reduce using rule 5 (DE)


State 9

    6 DE: B .

    $default  reduce using rule 6 (DE)


State 10

   55 IDD: ID .

    $default  reduce using rule 55 (IDD)


State 11

    7 DV: VAR LI . COLON T SEMI_COLON
   16 LI: LI . COMMA IDD

    COLON  shift, and go to state 35
    COMMA  shift, and go to state 36


State 12

   17 LI: IDD .

    $default  reduce using rule 17 (LI)


State 13

   18 S: IF . LEFT_PARENTHESIS E RIGHT_PARENTHESIS MTHEN S ENDIF
   19  | IF . LEFT_PARENTHESIS E RIGHT_PARENTHESIS MTHEN S ELSE MELSE S ENDIF

    LEFT_PARENTHESIS  shift, and go to state 37


State 14

   21 S: WHILE . MWHILE LEFT_PARENTHESIS E RIGHT_PARENTHESIS MTHEN S

    $default  reduce using rule 27 (MWHILE)

    MWHILE  go to state 38


State 15

   24 S: RETURN . E SEMI_COLON

    MINUS         shift, and go to state 16
    NOT           shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    ID            shift, and go to state 20
    STRINGVAL     shift, and go to state 21
    TRUE          shift, and go to state 22
    FALSE         shift, and go to state 23
    CHARACTER     shift, and go to state 24
    NUMERALFLOAT  shift, and go to state 25
    NUMERALINT    shift, and go to state 26

    E    go to state 39
    R    go to state 31
    NUM  go to state 32
    IDU  go to state 40


State 16

   45 R: MINUS . R

    MINUS         shift, and go to state 16
    NOT           shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    ID            shift, and go to state 20
    STRINGVAL     shift, and go to state 21
    TRUE          shift, and go to state 22
    FALSE         shift, and go to state 23
    CHARACTER     shift, and go to state 24
    NUMERALFLOAT  shift, and go to state 25
    NUMERALINT    shift, and go to state 26

    R    go to state 41
    NUM  go to state 32
    IDU  go to state 40


State 17

   46 R: NOT . R

    MINUS         shift, and go to state 16
    NOT           shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    ID            shift, and go to state 20
    STRINGVAL     shift, and go to state 21
    TRUE          shift, and go to state 22
    FALSE         shift, and go to state 23
    CHARACTER     shift, and go to state 24
    NUMERALFLOAT  shift, and go to state 25
    NUMERALINT    shift, and go to state 26

    R    go to state 42
    NUM  go to state 32
    IDU  go to state 40


State 18

   41 R: PLUS_PLUS . R

    MINUS         shift, and go to state 16
    NOT           shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    ID            shift, and go to state 20
    STRINGVAL     shift, and go to state 21
    TRUE          shift, and go to state 22
    FALSE         shift, and go to state 23
    CHARACTER     shift, and go to state 24
    NUMERALFLOAT  shift, and go to state 25
    NUMERALINT    shift, and go to state 26

    R    go to state 43
    NUM  go to state 32
    IDU  go to state 40


State 19

   42 R: MINUS_MINUS . R

    MINUS         shift, and go to state 16
    NOT           shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    ID            shift, and go to state 20
    STRINGVAL     shift, and go to state 21
    TRUE          shift, and go to state 22
    FALSE         shift, and go to state 23
    CHARACTER     shift, and go to state 24
    NUMERALFLOAT  shift, and go to state 25
    NUMERALINT    shift, and go to state 26

    R    go to state 44
    NUM  go to state 32
    IDU  go to state 40


State 20

   56 IDU: ID .

    $default  reduce using rule 56 (IDU)


State 21

   50 R: STRINGVAL .

    $default  reduce using rule 50 (R)


State 22

   47 R: TRUE .

    $default  reduce using rule 47 (R)


State 23

   48 R: FALSE .

    $default  reduce using rule 48 (R)


State 24

   49 R: CHARACTER .

    $default  reduce using rule 49 (R)


State 25

   53 NUM: NUMERALFLOAT .

    $default  reduce using rule 53 (NUM)


State 26

   54 NUM: NUMERALINT .

    $default  reduce using rule 54 (NUM)


State 27

   22 S: B .

    $default  reduce using rule 22 (S)


State 28

    8 B: LEFT_BRACES LS . RIGHT_BRACES
   14 LS: LS . S

    IF            shift, and go to state 13
    WHILE         shift, and go to state 14
    RETURN        shift, and go to state 15
    MINUS         shift, and go to state 16
    NOT           shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACES   shift, and go to state 5
    RIGHT_BRACES  shift, and go to state 45
    ID            shift, and go to state 20
    STRINGVAL     shift, and go to state 21
    TRUE          shift, and go to state 22
    FALSE         shift, and go to state 23
    CHARACTER     shift, and go to state 24
    NUMERALFLOAT  shift, and go to state 25
    NUMERALINT    shift, and go to state 26

    B    go to state 27
    S    go to state 46
    E    go to state 30
    R    go to state 31
    NUM  go to state 32
    IDU  go to state 33


State 29

   15 LS: S .

    $default  reduce using rule 15 (LS)


State 30

   23 S: E . SEMI_COLON
   28 E: E . AND R
   29  | E . OR R
   30  | E . LESS_THAN R
   31  | E . GREATER_THAN R
   32  | E . LESS_OR_EQUAL R
   33  | E . GREATER_OR_EQUAL R
   34  | E . EQUAL_EQUAL R
   35  | E . NOT_EQUAL R
   36  | E . PLUS R
   37  | E . MINUS R
   38  | E . TIMES R
   39  | E . DIVIDE R

    AND               shift, and go to state 47
    OR                shift, and go to state 48
    LESS_THAN         shift, and go to state 49
    GREATER_THAN      shift, and go to state 50
    LESS_OR_EQUAL     shift, and go to state 51
    GREATER_OR_EQUAL  shift, and go to state 52
    NOT_EQUAL         shift, and go to state 53
    EQUAL_EQUAL       shift, and go to state 54
    PLUS              shift, and go to state 55
    MINUS             shift, and go to state 56
    TIMES             shift, and go to state 57
    DIVIDE            shift, and go to state 58
    SEMI_COLON        shift, and go to state 59


State 31

   40 E: R .
   43 R: R . PLUS_PLUS
   44  | R . MINUS_MINUS

    PLUS_PLUS    shift, and go to state 60
    MINUS_MINUS  shift, and go to state 61

    $default  reduce using rule 40 (E)


State 32

   51 R: NUM .

    $default  reduce using rule 51 (R)


State 33

   20 S: IDU . EQUALS E SEMI_COLON
   52 R: IDU .

    EQUALS  shift, and go to state 62

    $default  reduce using rule 52 (R)


State 34

    3 LDE: LDE DE .

    $default  reduce using rule 3 (LDE)


State 35

    7 DV: VAR LI COLON . T SEMI_COLON

    INTEGER  shift, and go to state 63
    STRING   shift, and go to state 64
    FLOAT    shift, and go to state 65
    BOOLEAN  shift, and go to state 66
    CHAR     shift, and go to state 67

    T  go to state 68


State 36

   16 LI: LI COMMA . IDD

    ID  shift, and go to state 10

    IDD  go to state 69


State 37

   18 S: IF LEFT_PARENTHESIS . E RIGHT_PARENTHESIS MTHEN S ENDIF
   19  | IF LEFT_PARENTHESIS . E RIGHT_PARENTHESIS MTHEN S ELSE MELSE S ENDIF

    MINUS         shift, and go to state 16
    NOT           shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    ID            shift, and go to state 20
    STRINGVAL     shift, and go to state 21
    TRUE          shift, and go to state 22
    FALSE         shift, and go to state 23
    CHARACTER     shift, and go to state 24
    NUMERALFLOAT  shift, and go to state 25
    NUMERALINT    shift, and go to state 26

    E    go to state 70
    R    go to state 31
    NUM  go to state 32
    IDU  go to state 40


State 38

   21 S: WHILE MWHILE . LEFT_PARENTHESIS E RIGHT_PARENTHESIS MTHEN S

    LEFT_PARENTHESIS  shift, and go to state 71


State 39

   24 S: RETURN E . SEMI_COLON
   28 E: E . AND R
   29  | E . OR R
   30  | E . LESS_THAN R
   31  | E . GREATER_THAN R
   32  | E . LESS_OR_EQUAL R
   33  | E . GREATER_OR_EQUAL R
   34  | E . EQUAL_EQUAL R
   35  | E . NOT_EQUAL R
   36  | E . PLUS R
   37  | E . MINUS R
   38  | E . TIMES R
   39  | E . DIVIDE R

    AND               shift, and go to state 47
    OR                shift, and go to state 48
    LESS_THAN         shift, and go to state 49
    GREATER_THAN      shift, and go to state 50
    LESS_OR_EQUAL     shift, and go to state 51
    GREATER_OR_EQUAL  shift, and go to state 52
    NOT_EQUAL         shift, and go to state 53
    EQUAL_EQUAL       shift, and go to state 54
    PLUS              shift, and go to state 55
    MINUS             shift, and go to state 56
    TIMES             shift, and go to state 57
    DIVIDE            shift, and go to state 58
    SEMI_COLON        shift, and go to state 72


State 40

   52 R: IDU .

    $default  reduce using rule 52 (R)


State 41

   43 R: R . PLUS_PLUS
   44  | R . MINUS_MINUS
   45  | MINUS R .

    PLUS_PLUS    shift, and go to state 60
    MINUS_MINUS  shift, and go to state 61

    $default  reduce using rule 45 (R)


State 42

   43 R: R . PLUS_PLUS
   44  | R . MINUS_MINUS
   46  | NOT R .

    PLUS_PLUS    shift, and go to state 60
    MINUS_MINUS  shift, and go to state 61

    $default  reduce using rule 46 (R)


State 43

   41 R: PLUS_PLUS R .
   43  | R . PLUS_PLUS
   44  | R . MINUS_MINUS

    MINUS_MINUS  shift, and go to state 61

    $default  reduce using rule 41 (R)


State 44

   42 R: MINUS_MINUS R .
   43  | R . PLUS_PLUS
   44  | R . MINUS_MINUS

    $default  reduce using rule 42 (R)


State 45

    8 B: LEFT_BRACES LS RIGHT_BRACES .

    $default  reduce using rule 8 (B)


State 46

   14 LS: LS S .

    $default  reduce using rule 14 (LS)


State 47

   28 E: E AND . R

    MINUS         shift, and go to state 16
    NOT           shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    ID            shift, and go to state 20
    STRINGVAL     shift, and go to state 21
    TRUE          shift, and go to state 22
    FALSE         shift, and go to state 23
    CHARACTER     shift, and go to state 24
    NUMERALFLOAT  shift, and go to state 25
    NUMERALINT    shift, and go to state 26

    R    go to state 73
    NUM  go to state 32
    IDU  go to state 40


State 48

   29 E: E OR . R

    MINUS         shift, and go to state 16
    NOT           shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    ID            shift, and go to state 20
    STRINGVAL     shift, and go to state 21
    TRUE          shift, and go to state 22
    FALSE         shift, and go to state 23
    CHARACTER     shift, and go to state 24
    NUMERALFLOAT  shift, and go to state 25
    NUMERALINT    shift, and go to state 26

    R    go to state 74
    NUM  go to state 32
    IDU  go to state 40


State 49

   30 E: E LESS_THAN . R

    MINUS         shift, and go to state 16
    NOT           shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    ID            shift, and go to state 20
    STRINGVAL     shift, and go to state 21
    TRUE          shift, and go to state 22
    FALSE         shift, and go to state 23
    CHARACTER     shift, and go to state 24
    NUMERALFLOAT  shift, and go to state 25
    NUMERALINT    shift, and go to state 26

    R    go to state 75
    NUM  go to state 32
    IDU  go to state 40


State 50

   31 E: E GREATER_THAN . R

    MINUS         shift, and go to state 16
    NOT           shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    ID            shift, and go to state 20
    STRINGVAL     shift, and go to state 21
    TRUE          shift, and go to state 22
    FALSE         shift, and go to state 23
    CHARACTER     shift, and go to state 24
    NUMERALFLOAT  shift, and go to state 25
    NUMERALINT    shift, and go to state 26

    R    go to state 76
    NUM  go to state 32
    IDU  go to state 40


State 51

   32 E: E LESS_OR_EQUAL . R

    MINUS         shift, and go to state 16
    NOT           shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    ID            shift, and go to state 20
    STRINGVAL     shift, and go to state 21
    TRUE          shift, and go to state 22
    FALSE         shift, and go to state 23
    CHARACTER     shift, and go to state 24
    NUMERALFLOAT  shift, and go to state 25
    NUMERALINT    shift, and go to state 26

    R    go to state 77
    NUM  go to state 32
    IDU  go to state 40


State 52

   33 E: E GREATER_OR_EQUAL . R

    MINUS         shift, and go to state 16
    NOT           shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    ID            shift, and go to state 20
    STRINGVAL     shift, and go to state 21
    TRUE          shift, and go to state 22
    FALSE         shift, and go to state 23
    CHARACTER     shift, and go to state 24
    NUMERALFLOAT  shift, and go to state 25
    NUMERALINT    shift, and go to state 26

    R    go to state 78
    NUM  go to state 32
    IDU  go to state 40


State 53

   35 E: E NOT_EQUAL . R

    MINUS         shift, and go to state 16
    NOT           shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    ID            shift, and go to state 20
    STRINGVAL     shift, and go to state 21
    TRUE          shift, and go to state 22
    FALSE         shift, and go to state 23
    CHARACTER     shift, and go to state 24
    NUMERALFLOAT  shift, and go to state 25
    NUMERALINT    shift, and go to state 26

    R    go to state 79
    NUM  go to state 32
    IDU  go to state 40


State 54

   34 E: E EQUAL_EQUAL . R

    MINUS         shift, and go to state 16
    NOT           shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    ID            shift, and go to state 20
    STRINGVAL     shift, and go to state 21
    TRUE          shift, and go to state 22
    FALSE         shift, and go to state 23
    CHARACTER     shift, and go to state 24
    NUMERALFLOAT  shift, and go to state 25
    NUMERALINT    shift, and go to state 26

    R    go to state 80
    NUM  go to state 32
    IDU  go to state 40


State 55

   36 E: E PLUS . R

    MINUS         shift, and go to state 16
    NOT           shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    ID            shift, and go to state 20
    STRINGVAL     shift, and go to state 21
    TRUE          shift, and go to state 22
    FALSE         shift, and go to state 23
    CHARACTER     shift, and go to state 24
    NUMERALFLOAT  shift, and go to state 25
    NUMERALINT    shift, and go to state 26

    R    go to state 81
    NUM  go to state 32
    IDU  go to state 40


State 56

   37 E: E MINUS . R

    MINUS         shift, and go to state 16
    NOT           shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    ID            shift, and go to state 20
    STRINGVAL     shift, and go to state 21
    TRUE          shift, and go to state 22
    FALSE         shift, and go to state 23
    CHARACTER     shift, and go to state 24
    NUMERALFLOAT  shift, and go to state 25
    NUMERALINT    shift, and go to state 26

    R    go to state 82
    NUM  go to state 32
    IDU  go to state 40


State 57

   38 E: E TIMES . R

    MINUS         shift, and go to state 16
    NOT           shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    ID            shift, and go to state 20
    STRINGVAL     shift, and go to state 21
    TRUE          shift, and go to state 22
    FALSE         shift, and go to state 23
    CHARACTER     shift, and go to state 24
    NUMERALFLOAT  shift, and go to state 25
    NUMERALINT    shift, and go to state 26

    R    go to state 83
    NUM  go to state 32
    IDU  go to state 40


State 58

   39 E: E DIVIDE . R

    MINUS         shift, and go to state 16
    NOT           shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    ID            shift, and go to state 20
    STRINGVAL     shift, and go to state 21
    TRUE          shift, and go to state 22
    FALSE         shift, and go to state 23
    CHARACTER     shift, and go to state 24
    NUMERALFLOAT  shift, and go to state 25
    NUMERALINT    shift, and go to state 26

    R    go to state 84
    NUM  go to state 32
    IDU  go to state 40


State 59

   23 S: E SEMI_COLON .

    $default  reduce using rule 23 (S)


State 60

   43 R: R PLUS_PLUS .

    $default  reduce using rule 43 (R)


State 61

   44 R: R MINUS_MINUS .

    $default  reduce using rule 44 (R)


State 62

   20 S: IDU EQUALS . E SEMI_COLON

    MINUS         shift, and go to state 16
    NOT           shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    ID            shift, and go to state 20
    STRINGVAL     shift, and go to state 21
    TRUE          shift, and go to state 22
    FALSE         shift, and go to state 23
    CHARACTER     shift, and go to state 24
    NUMERALFLOAT  shift, and go to state 25
    NUMERALINT    shift, and go to state 26

    E    go to state 85
    R    go to state 31
    NUM  go to state 32
    IDU  go to state 40


State 63

    9 T: INTEGER .

    $default  reduce using rule 9 (T)


State 64

   13 T: STRING .

    $default  reduce using rule 13 (T)


State 65

   10 T: FLOAT .

    $default  reduce using rule 10 (T)


State 66

   12 T: BOOLEAN .

    $default  reduce using rule 12 (T)


State 67

   11 T: CHAR .

    $default  reduce using rule 11 (T)


State 68

    7 DV: VAR LI COLON T . SEMI_COLON

    SEMI_COLON  shift, and go to state 86


State 69

   16 LI: LI COMMA IDD .

    $default  reduce using rule 16 (LI)


State 70

   18 S: IF LEFT_PARENTHESIS E . RIGHT_PARENTHESIS MTHEN S ENDIF
   19  | IF LEFT_PARENTHESIS E . RIGHT_PARENTHESIS MTHEN S ELSE MELSE S ENDIF
   28 E: E . AND R
   29  | E . OR R
   30  | E . LESS_THAN R
   31  | E . GREATER_THAN R
   32  | E . LESS_OR_EQUAL R
   33  | E . GREATER_OR_EQUAL R
   34  | E . EQUAL_EQUAL R
   35  | E . NOT_EQUAL R
   36  | E . PLUS R
   37  | E . MINUS R
   38  | E . TIMES R
   39  | E . DIVIDE R

    AND                shift, and go to state 47
    OR                 shift, and go to state 48
    LESS_THAN          shift, and go to state 49
    GREATER_THAN       shift, and go to state 50
    LESS_OR_EQUAL      shift, and go to state 51
    GREATER_OR_EQUAL   shift, and go to state 52
    NOT_EQUAL          shift, and go to state 53
    EQUAL_EQUAL        shift, and go to state 54
    PLUS               shift, and go to state 55
    MINUS              shift, and go to state 56
    TIMES              shift, and go to state 57
    DIVIDE             shift, and go to state 58
    RIGHT_PARENTHESIS  shift, and go to state 87


State 71

   21 S: WHILE MWHILE LEFT_PARENTHESIS . E RIGHT_PARENTHESIS MTHEN S

    MINUS         shift, and go to state 16
    NOT           shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    ID            shift, and go to state 20
    STRINGVAL     shift, and go to state 21
    TRUE          shift, and go to state 22
    FALSE         shift, and go to state 23
    CHARACTER     shift, and go to state 24
    NUMERALFLOAT  shift, and go to state 25
    NUMERALINT    shift, and go to state 26

    E    go to state 88
    R    go to state 31
    NUM  go to state 32
    IDU  go to state 40


State 72

   24 S: RETURN E SEMI_COLON .

    $default  reduce using rule 24 (S)


State 73

   28 E: E AND R .
   43 R: R . PLUS_PLUS
   44  | R . MINUS_MINUS

    PLUS_PLUS    shift, and go to state 60
    MINUS_MINUS  shift, and go to state 61

    $default  reduce using rule 28 (E)


State 74

   29 E: E OR R .
   43 R: R . PLUS_PLUS
   44  | R . MINUS_MINUS

    PLUS_PLUS    shift, and go to state 60
    MINUS_MINUS  shift, and go to state 61

    $default  reduce using rule 29 (E)


State 75

   30 E: E LESS_THAN R .
   43 R: R . PLUS_PLUS
   44  | R . MINUS_MINUS

    PLUS_PLUS    shift, and go to state 60
    MINUS_MINUS  shift, and go to state 61

    $default  reduce using rule 30 (E)


State 76

   31 E: E GREATER_THAN R .
   43 R: R . PLUS_PLUS
   44  | R . MINUS_MINUS

    PLUS_PLUS    shift, and go to state 60
    MINUS_MINUS  shift, and go to state 61

    $default  reduce using rule 31 (E)


State 77

   32 E: E LESS_OR_EQUAL R .
   43 R: R . PLUS_PLUS
   44  | R . MINUS_MINUS

    PLUS_PLUS    shift, and go to state 60
    MINUS_MINUS  shift, and go to state 61

    $default  reduce using rule 32 (E)


State 78

   33 E: E GREATER_OR_EQUAL R .
   43 R: R . PLUS_PLUS
   44  | R . MINUS_MINUS

    PLUS_PLUS    shift, and go to state 60
    MINUS_MINUS  shift, and go to state 61

    $default  reduce using rule 33 (E)


State 79

   35 E: E NOT_EQUAL R .
   43 R: R . PLUS_PLUS
   44  | R . MINUS_MINUS

    PLUS_PLUS    shift, and go to state 60
    MINUS_MINUS  shift, and go to state 61

    $default  reduce using rule 35 (E)


State 80

   34 E: E EQUAL_EQUAL R .
   43 R: R . PLUS_PLUS
   44  | R . MINUS_MINUS

    PLUS_PLUS    shift, and go to state 60
    MINUS_MINUS  shift, and go to state 61

    $default  reduce using rule 34 (E)


State 81

   36 E: E PLUS R .
   43 R: R . PLUS_PLUS
   44  | R . MINUS_MINUS

    PLUS_PLUS    shift, and go to state 60
    MINUS_MINUS  shift, and go to state 61

    $default  reduce using rule 36 (E)


State 82

   37 E: E MINUS R .
   43 R: R . PLUS_PLUS
   44  | R . MINUS_MINUS

    PLUS_PLUS    shift, and go to state 60
    MINUS_MINUS  shift, and go to state 61

    $default  reduce using rule 37 (E)


State 83

   38 E: E TIMES R .
   43 R: R . PLUS_PLUS
   44  | R . MINUS_MINUS

    PLUS_PLUS    shift, and go to state 60
    MINUS_MINUS  shift, and go to state 61

    $default  reduce using rule 38 (E)


State 84

   39 E: E DIVIDE R .
   43 R: R . PLUS_PLUS
   44  | R . MINUS_MINUS

    PLUS_PLUS    shift, and go to state 60
    MINUS_MINUS  shift, and go to state 61

    $default  reduce using rule 39 (E)


State 85

   20 S: IDU EQUALS E . SEMI_COLON
   28 E: E . AND R
   29  | E . OR R
   30  | E . LESS_THAN R
   31  | E . GREATER_THAN R
   32  | E . LESS_OR_EQUAL R
   33  | E . GREATER_OR_EQUAL R
   34  | E . EQUAL_EQUAL R
   35  | E . NOT_EQUAL R
   36  | E . PLUS R
   37  | E . MINUS R
   38  | E . TIMES R
   39  | E . DIVIDE R

    AND               shift, and go to state 47
    OR                shift, and go to state 48
    LESS_THAN         shift, and go to state 49
    GREATER_THAN      shift, and go to state 50
    LESS_OR_EQUAL     shift, and go to state 51
    GREATER_OR_EQUAL  shift, and go to state 52
    NOT_EQUAL         shift, and go to state 53
    EQUAL_EQUAL       shift, and go to state 54
    PLUS              shift, and go to state 55
    MINUS             shift, and go to state 56
    TIMES             shift, and go to state 57
    DIVIDE            shift, and go to state 58
    SEMI_COLON        shift, and go to state 89


State 86

    7 DV: VAR LI COLON T SEMI_COLON .

    $default  reduce using rule 7 (DV)


State 87

   18 S: IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS . MTHEN S ENDIF
   19  | IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS . MTHEN S ELSE MELSE S ENDIF

    $default  reduce using rule 25 (MTHEN)

    MTHEN  go to state 90


State 88

   21 S: WHILE MWHILE LEFT_PARENTHESIS E . RIGHT_PARENTHESIS MTHEN S
   28 E: E . AND R
   29  | E . OR R
   30  | E . LESS_THAN R
   31  | E . GREATER_THAN R
   32  | E . LESS_OR_EQUAL R
   33  | E . GREATER_OR_EQUAL R
   34  | E . EQUAL_EQUAL R
   35  | E . NOT_EQUAL R
   36  | E . PLUS R
   37  | E . MINUS R
   38  | E . TIMES R
   39  | E . DIVIDE R

    AND                shift, and go to state 47
    OR                 shift, and go to state 48
    LESS_THAN          shift, and go to state 49
    GREATER_THAN       shift, and go to state 50
    LESS_OR_EQUAL      shift, and go to state 51
    GREATER_OR_EQUAL   shift, and go to state 52
    NOT_EQUAL          shift, and go to state 53
    EQUAL_EQUAL        shift, and go to state 54
    PLUS               shift, and go to state 55
    MINUS              shift, and go to state 56
    TIMES              shift, and go to state 57
    DIVIDE             shift, and go to state 58
    RIGHT_PARENTHESIS  shift, and go to state 91


State 89

   20 S: IDU EQUALS E SEMI_COLON .

    $default  reduce using rule 20 (S)


State 90

   18 S: IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS MTHEN . S ENDIF
   19  | IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS MTHEN . S ELSE MELSE S ENDIF

    IF            shift, and go to state 13
    WHILE         shift, and go to state 14
    RETURN        shift, and go to state 15
    MINUS         shift, and go to state 16
    NOT           shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACES   shift, and go to state 5
    ID            shift, and go to state 20
    STRINGVAL     shift, and go to state 21
    TRUE          shift, and go to state 22
    FALSE         shift, and go to state 23
    CHARACTER     shift, and go to state 24
    NUMERALFLOAT  shift, and go to state 25
    NUMERALINT    shift, and go to state 26

    B    go to state 27
    S    go to state 92
    E    go to state 30
    R    go to state 31
    NUM  go to state 32
    IDU  go to state 33


State 91

   21 S: WHILE MWHILE LEFT_PARENTHESIS E RIGHT_PARENTHESIS . MTHEN S

    $default  reduce using rule 25 (MTHEN)

    MTHEN  go to state 93


State 92

   18 S: IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS MTHEN S . ENDIF
   19  | IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS MTHEN S . ELSE MELSE S ENDIF

    ELSE   shift, and go to state 94
    ENDIF  shift, and go to state 95


State 93

   21 S: WHILE MWHILE LEFT_PARENTHESIS E RIGHT_PARENTHESIS MTHEN . S

    IF            shift, and go to state 13
    WHILE         shift, and go to state 14
    RETURN        shift, and go to state 15
    MINUS         shift, and go to state 16
    NOT           shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACES   shift, and go to state 5
    ID            shift, and go to state 20
    STRINGVAL     shift, and go to state 21
    TRUE          shift, and go to state 22
    FALSE         shift, and go to state 23
    CHARACTER     shift, and go to state 24
    NUMERALFLOAT  shift, and go to state 25
    NUMERALINT    shift, and go to state 26

    B    go to state 27
    S    go to state 96
    E    go to state 30
    R    go to state 31
    NUM  go to state 32
    IDU  go to state 33


State 94

   19 S: IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS MTHEN S ELSE . MELSE S ENDIF

    $default  reduce using rule 26 (MELSE)

    MELSE  go to state 97


State 95

   18 S: IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS MTHEN S ENDIF .

    $default  reduce using rule 18 (S)


State 96

   21 S: WHILE MWHILE LEFT_PARENTHESIS E RIGHT_PARENTHESIS MTHEN S .

    $default  reduce using rule 21 (S)


State 97

   19 S: IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS MTHEN S ELSE MELSE . S ENDIF

    IF            shift, and go to state 13
    WHILE         shift, and go to state 14
    RETURN        shift, and go to state 15
    MINUS         shift, and go to state 16
    NOT           shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACES   shift, and go to state 5
    ID            shift, and go to state 20
    STRINGVAL     shift, and go to state 21
    TRUE          shift, and go to state 22
    FALSE         shift, and go to state 23
    CHARACTER     shift, and go to state 24
    NUMERALFLOAT  shift, and go to state 25
    NUMERALINT    shift, and go to state 26

    B    go to state 27
    S    go to state 98
    E    go to state 30
    R    go to state 31
    NUM  go to state 32
    IDU  go to state 33


State 98

   19 S: IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS MTHEN S ELSE MELSE S . ENDIF

    ENDIF  shift, and go to state 99


State 99

   19 S: IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS MTHEN S ELSE MELSE S ENDIF .

    $default  reduce using rule 19 (S)
