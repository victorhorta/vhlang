Grammar

    0 $accept: P $end

    1 P: LDE

    2 LDE: LDE DE
    3    | DE

    4 DE: DV
    5   | B

    6 DV: VAR LI COLON T SEMI_COLON

    7 B: LEFT_BRACES LS RIGHT_BRACES

    8 T: INTEGER
    9  | FLOAT
   10  | CHAR
   11  | BOOLEAN
   12  | STRING

   13 LS: LS S
   14   | S

   15 LI: LI COMMA IDD
   16   | IDD

   17 S: IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS S ENDIF
   18  | IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS S ELSE S ENDIF
   19  | IDU EQUALS E SEMI_COLON
   20  | B
   21  | E SEMI_COLON

   22 E: E AND R
   23  | E OR R
   24  | E LESS_THAN R
   25  | E GREATER_THAN R
   26  | E LESS_OR_EQUAL R
   27  | E GREATER_OR_EQUAL R
   28  | E EQUAL_EQUAL R
   29  | E NOT_EQUAL R
   30  | E PLUS R
   31  | E MINUS R
   32  | E TIMES R
   33  | E DIVIDE R
   34  | R

   35 R: PLUS_PLUS R
   36  | R PLUS_PLUS
   37  | MINUS_MINUS R
   38  | R MINUS_MINUS
   39  | MINUS R
   40  | NOT R
   41  | TRUE
   42  | FALSE
   43  | CHARACTER
   44  | STRINGVAL
   45  | NUM
   46  | IDU

   47 NUM: NUMERALFLOAT
   48    | NUMERALINT

   49 IDD: ID

   50 IDU: ID


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 17 18
ELSE (259) 18
ENDIF (260) 17 18
EQUALS (261) 19
AND (262) 22
OR (263) 23
LESS_THAN (264) 24
GREATER_THAN (265) 25
LESS_OR_EQUAL (266) 26
GREATER_OR_EQUAL (267) 27
NOT_EQUAL (268) 29
EQUAL_EQUAL (269) 28
PLUS (270) 30
MINUS (271) 31 39
TIMES (272) 32
DIVIDE (273) 33
NOT (274) 40
PLUS_PLUS (275) 35 36
MINUS_MINUS (276) 37 38
BOOLEAN (277) 11
CHAR (278) 10
INTEGER (279) 8
STRING (280) 12
FLOAT (281) 9
VAR (282) 6
COLON (283) 6
SEMI_COLON (284) 6 19 21
COMMA (285) 15
LEFT_BRACES (286) 7
RIGHT_BRACES (287) 7
LEFT_PARENTHESIS (288) 17 18
RIGHT_PARENTHESIS (289) 17 18
ID (290) 49 50
STRINGVAL (291) 44
TRUE (292) 41
FALSE (293) 42
CHARACTER (294) 43
NUMERALFLOAT (295) 47
NUMERALINT (296) 48


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
P (43)
    on left: 1, on right: 0
LDE (44)
    on left: 2 3, on right: 1 2
DE (45)
    on left: 4 5, on right: 2 3
DV (46)
    on left: 6, on right: 4
B (47)
    on left: 7, on right: 5 20
T (48)
    on left: 8 9 10 11 12, on right: 6
LS (49)
    on left: 13 14, on right: 7 13
LI (50)
    on left: 15 16, on right: 6 15
S (51)
    on left: 17 18 19 20 21, on right: 13 14 17 18
E (52)
    on left: 22 23 24 25 26 27 28 29 30 31 32 33 34, on right: 17 18
    19 21 22 23 24 25 26 27 28 29 30 31 32 33
R (53)
    on left: 35 36 37 38 39 40 41 42 43 44 45 46, on right: 22 23 24
    25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
NUM (54)
    on left: 47 48, on right: 45
IDD (55)
    on left: 49, on right: 15 16
IDU (56)
    on left: 50, on right: 19 46


State 0

    0 $accept: . P $end

    VAR          shift, and go to state 1
    LEFT_BRACES  shift, and go to state 2

    P    go to state 3
    LDE  go to state 4
    DE   go to state 5
    DV   go to state 6
    B    go to state 7


State 1

    6 DV: VAR . LI COLON T SEMI_COLON

    ID  shift, and go to state 8

    LI   go to state 9
    IDD  go to state 10


State 2

    7 B: LEFT_BRACES . LS RIGHT_BRACES

    IF            shift, and go to state 11
    MINUS         shift, and go to state 12
    NOT           shift, and go to state 13
    PLUS_PLUS     shift, and go to state 14
    MINUS_MINUS   shift, and go to state 15
    LEFT_BRACES   shift, and go to state 2
    ID            shift, and go to state 16
    STRINGVAL     shift, and go to state 17
    TRUE          shift, and go to state 18
    FALSE         shift, and go to state 19
    CHARACTER     shift, and go to state 20
    NUMERALFLOAT  shift, and go to state 21
    NUMERALINT    shift, and go to state 22

    B    go to state 23
    LS   go to state 24
    S    go to state 25
    E    go to state 26
    R    go to state 27
    NUM  go to state 28
    IDU  go to state 29


State 3

    0 $accept: P . $end

    $end  shift, and go to state 30


State 4

    1 P: LDE .
    2 LDE: LDE . DE

    VAR          shift, and go to state 1
    LEFT_BRACES  shift, and go to state 2

    $default  reduce using rule 1 (P)

    DE  go to state 31
    DV  go to state 6
    B   go to state 7


State 5

    3 LDE: DE .

    $default  reduce using rule 3 (LDE)


State 6

    4 DE: DV .

    $default  reduce using rule 4 (DE)


State 7

    5 DE: B .

    $default  reduce using rule 5 (DE)


State 8

   49 IDD: ID .

    $default  reduce using rule 49 (IDD)


State 9

    6 DV: VAR LI . COLON T SEMI_COLON
   15 LI: LI . COMMA IDD

    COLON  shift, and go to state 32
    COMMA  shift, and go to state 33


State 10

   16 LI: IDD .

    $default  reduce using rule 16 (LI)


State 11

   17 S: IF . LEFT_PARENTHESIS E RIGHT_PARENTHESIS S ENDIF
   18  | IF . LEFT_PARENTHESIS E RIGHT_PARENTHESIS S ELSE S ENDIF

    LEFT_PARENTHESIS  shift, and go to state 34


State 12

   39 R: MINUS . R

    MINUS         shift, and go to state 12
    NOT           shift, and go to state 13
    PLUS_PLUS     shift, and go to state 14
    MINUS_MINUS   shift, and go to state 15
    ID            shift, and go to state 16
    STRINGVAL     shift, and go to state 17
    TRUE          shift, and go to state 18
    FALSE         shift, and go to state 19
    CHARACTER     shift, and go to state 20
    NUMERALFLOAT  shift, and go to state 21
    NUMERALINT    shift, and go to state 22

    R    go to state 35
    NUM  go to state 28
    IDU  go to state 36


State 13

   40 R: NOT . R

    MINUS         shift, and go to state 12
    NOT           shift, and go to state 13
    PLUS_PLUS     shift, and go to state 14
    MINUS_MINUS   shift, and go to state 15
    ID            shift, and go to state 16
    STRINGVAL     shift, and go to state 17
    TRUE          shift, and go to state 18
    FALSE         shift, and go to state 19
    CHARACTER     shift, and go to state 20
    NUMERALFLOAT  shift, and go to state 21
    NUMERALINT    shift, and go to state 22

    R    go to state 37
    NUM  go to state 28
    IDU  go to state 36


State 14

   35 R: PLUS_PLUS . R

    MINUS         shift, and go to state 12
    NOT           shift, and go to state 13
    PLUS_PLUS     shift, and go to state 14
    MINUS_MINUS   shift, and go to state 15
    ID            shift, and go to state 16
    STRINGVAL     shift, and go to state 17
    TRUE          shift, and go to state 18
    FALSE         shift, and go to state 19
    CHARACTER     shift, and go to state 20
    NUMERALFLOAT  shift, and go to state 21
    NUMERALINT    shift, and go to state 22

    R    go to state 38
    NUM  go to state 28
    IDU  go to state 36


State 15

   37 R: MINUS_MINUS . R

    MINUS         shift, and go to state 12
    NOT           shift, and go to state 13
    PLUS_PLUS     shift, and go to state 14
    MINUS_MINUS   shift, and go to state 15
    ID            shift, and go to state 16
    STRINGVAL     shift, and go to state 17
    TRUE          shift, and go to state 18
    FALSE         shift, and go to state 19
    CHARACTER     shift, and go to state 20
    NUMERALFLOAT  shift, and go to state 21
    NUMERALINT    shift, and go to state 22

    R    go to state 39
    NUM  go to state 28
    IDU  go to state 36


State 16

   50 IDU: ID .

    $default  reduce using rule 50 (IDU)


State 17

   44 R: STRINGVAL .

    $default  reduce using rule 44 (R)


State 18

   41 R: TRUE .

    $default  reduce using rule 41 (R)


State 19

   42 R: FALSE .

    $default  reduce using rule 42 (R)


State 20

   43 R: CHARACTER .

    $default  reduce using rule 43 (R)


State 21

   47 NUM: NUMERALFLOAT .

    $default  reduce using rule 47 (NUM)


State 22

   48 NUM: NUMERALINT .

    $default  reduce using rule 48 (NUM)


State 23

   20 S: B .

    $default  reduce using rule 20 (S)


State 24

    7 B: LEFT_BRACES LS . RIGHT_BRACES
   13 LS: LS . S

    IF            shift, and go to state 11
    MINUS         shift, and go to state 12
    NOT           shift, and go to state 13
    PLUS_PLUS     shift, and go to state 14
    MINUS_MINUS   shift, and go to state 15
    LEFT_BRACES   shift, and go to state 2
    RIGHT_BRACES  shift, and go to state 40
    ID            shift, and go to state 16
    STRINGVAL     shift, and go to state 17
    TRUE          shift, and go to state 18
    FALSE         shift, and go to state 19
    CHARACTER     shift, and go to state 20
    NUMERALFLOAT  shift, and go to state 21
    NUMERALINT    shift, and go to state 22

    B    go to state 23
    S    go to state 41
    E    go to state 26
    R    go to state 27
    NUM  go to state 28
    IDU  go to state 29


State 25

   14 LS: S .

    $default  reduce using rule 14 (LS)


State 26

   21 S: E . SEMI_COLON
   22 E: E . AND R
   23  | E . OR R
   24  | E . LESS_THAN R
   25  | E . GREATER_THAN R
   26  | E . LESS_OR_EQUAL R
   27  | E . GREATER_OR_EQUAL R
   28  | E . EQUAL_EQUAL R
   29  | E . NOT_EQUAL R
   30  | E . PLUS R
   31  | E . MINUS R
   32  | E . TIMES R
   33  | E . DIVIDE R

    AND               shift, and go to state 42
    OR                shift, and go to state 43
    LESS_THAN         shift, and go to state 44
    GREATER_THAN      shift, and go to state 45
    LESS_OR_EQUAL     shift, and go to state 46
    GREATER_OR_EQUAL  shift, and go to state 47
    NOT_EQUAL         shift, and go to state 48
    EQUAL_EQUAL       shift, and go to state 49
    PLUS              shift, and go to state 50
    MINUS             shift, and go to state 51
    TIMES             shift, and go to state 52
    DIVIDE            shift, and go to state 53
    SEMI_COLON        shift, and go to state 54


State 27

   34 E: R .
   36 R: R . PLUS_PLUS
   38  | R . MINUS_MINUS

    PLUS_PLUS    shift, and go to state 55
    MINUS_MINUS  shift, and go to state 56

    $default  reduce using rule 34 (E)


State 28

   45 R: NUM .

    $default  reduce using rule 45 (R)


State 29

   19 S: IDU . EQUALS E SEMI_COLON
   46 R: IDU .

    EQUALS  shift, and go to state 57

    $default  reduce using rule 46 (R)


State 30

    0 $accept: P $end .

    $default  accept


State 31

    2 LDE: LDE DE .

    $default  reduce using rule 2 (LDE)


State 32

    6 DV: VAR LI COLON . T SEMI_COLON

    BOOLEAN  shift, and go to state 58
    CHAR     shift, and go to state 59
    INTEGER  shift, and go to state 60
    STRING   shift, and go to state 61
    FLOAT    shift, and go to state 62

    T  go to state 63


State 33

   15 LI: LI COMMA . IDD

    ID  shift, and go to state 8

    IDD  go to state 64


State 34

   17 S: IF LEFT_PARENTHESIS . E RIGHT_PARENTHESIS S ENDIF
   18  | IF LEFT_PARENTHESIS . E RIGHT_PARENTHESIS S ELSE S ENDIF

    MINUS         shift, and go to state 12
    NOT           shift, and go to state 13
    PLUS_PLUS     shift, and go to state 14
    MINUS_MINUS   shift, and go to state 15
    ID            shift, and go to state 16
    STRINGVAL     shift, and go to state 17
    TRUE          shift, and go to state 18
    FALSE         shift, and go to state 19
    CHARACTER     shift, and go to state 20
    NUMERALFLOAT  shift, and go to state 21
    NUMERALINT    shift, and go to state 22

    E    go to state 65
    R    go to state 27
    NUM  go to state 28
    IDU  go to state 36


State 35

   36 R: R . PLUS_PLUS
   38  | R . MINUS_MINUS
   39  | MINUS R .

    PLUS_PLUS    shift, and go to state 55
    MINUS_MINUS  shift, and go to state 56

    $default  reduce using rule 39 (R)


State 36

   46 R: IDU .

    $default  reduce using rule 46 (R)


State 37

   36 R: R . PLUS_PLUS
   38  | R . MINUS_MINUS
   40  | NOT R .

    PLUS_PLUS    shift, and go to state 55
    MINUS_MINUS  shift, and go to state 56

    $default  reduce using rule 40 (R)


State 38

   35 R: PLUS_PLUS R .
   36  | R . PLUS_PLUS
   38  | R . MINUS_MINUS

    MINUS_MINUS  shift, and go to state 56

    $default  reduce using rule 35 (R)


State 39

   36 R: R . PLUS_PLUS
   37  | MINUS_MINUS R .
   38  | R . MINUS_MINUS

    $default  reduce using rule 37 (R)


State 40

    7 B: LEFT_BRACES LS RIGHT_BRACES .

    $default  reduce using rule 7 (B)


State 41

   13 LS: LS S .

    $default  reduce using rule 13 (LS)


State 42

   22 E: E AND . R

    MINUS         shift, and go to state 12
    NOT           shift, and go to state 13
    PLUS_PLUS     shift, and go to state 14
    MINUS_MINUS   shift, and go to state 15
    ID            shift, and go to state 16
    STRINGVAL     shift, and go to state 17
    TRUE          shift, and go to state 18
    FALSE         shift, and go to state 19
    CHARACTER     shift, and go to state 20
    NUMERALFLOAT  shift, and go to state 21
    NUMERALINT    shift, and go to state 22

    R    go to state 66
    NUM  go to state 28
    IDU  go to state 36


State 43

   23 E: E OR . R

    MINUS         shift, and go to state 12
    NOT           shift, and go to state 13
    PLUS_PLUS     shift, and go to state 14
    MINUS_MINUS   shift, and go to state 15
    ID            shift, and go to state 16
    STRINGVAL     shift, and go to state 17
    TRUE          shift, and go to state 18
    FALSE         shift, and go to state 19
    CHARACTER     shift, and go to state 20
    NUMERALFLOAT  shift, and go to state 21
    NUMERALINT    shift, and go to state 22

    R    go to state 67
    NUM  go to state 28
    IDU  go to state 36


State 44

   24 E: E LESS_THAN . R

    MINUS         shift, and go to state 12
    NOT           shift, and go to state 13
    PLUS_PLUS     shift, and go to state 14
    MINUS_MINUS   shift, and go to state 15
    ID            shift, and go to state 16
    STRINGVAL     shift, and go to state 17
    TRUE          shift, and go to state 18
    FALSE         shift, and go to state 19
    CHARACTER     shift, and go to state 20
    NUMERALFLOAT  shift, and go to state 21
    NUMERALINT    shift, and go to state 22

    R    go to state 68
    NUM  go to state 28
    IDU  go to state 36


State 45

   25 E: E GREATER_THAN . R

    MINUS         shift, and go to state 12
    NOT           shift, and go to state 13
    PLUS_PLUS     shift, and go to state 14
    MINUS_MINUS   shift, and go to state 15
    ID            shift, and go to state 16
    STRINGVAL     shift, and go to state 17
    TRUE          shift, and go to state 18
    FALSE         shift, and go to state 19
    CHARACTER     shift, and go to state 20
    NUMERALFLOAT  shift, and go to state 21
    NUMERALINT    shift, and go to state 22

    R    go to state 69
    NUM  go to state 28
    IDU  go to state 36


State 46

   26 E: E LESS_OR_EQUAL . R

    MINUS         shift, and go to state 12
    NOT           shift, and go to state 13
    PLUS_PLUS     shift, and go to state 14
    MINUS_MINUS   shift, and go to state 15
    ID            shift, and go to state 16
    STRINGVAL     shift, and go to state 17
    TRUE          shift, and go to state 18
    FALSE         shift, and go to state 19
    CHARACTER     shift, and go to state 20
    NUMERALFLOAT  shift, and go to state 21
    NUMERALINT    shift, and go to state 22

    R    go to state 70
    NUM  go to state 28
    IDU  go to state 36


State 47

   27 E: E GREATER_OR_EQUAL . R

    MINUS         shift, and go to state 12
    NOT           shift, and go to state 13
    PLUS_PLUS     shift, and go to state 14
    MINUS_MINUS   shift, and go to state 15
    ID            shift, and go to state 16
    STRINGVAL     shift, and go to state 17
    TRUE          shift, and go to state 18
    FALSE         shift, and go to state 19
    CHARACTER     shift, and go to state 20
    NUMERALFLOAT  shift, and go to state 21
    NUMERALINT    shift, and go to state 22

    R    go to state 71
    NUM  go to state 28
    IDU  go to state 36


State 48

   29 E: E NOT_EQUAL . R

    MINUS         shift, and go to state 12
    NOT           shift, and go to state 13
    PLUS_PLUS     shift, and go to state 14
    MINUS_MINUS   shift, and go to state 15
    ID            shift, and go to state 16
    STRINGVAL     shift, and go to state 17
    TRUE          shift, and go to state 18
    FALSE         shift, and go to state 19
    CHARACTER     shift, and go to state 20
    NUMERALFLOAT  shift, and go to state 21
    NUMERALINT    shift, and go to state 22

    R    go to state 72
    NUM  go to state 28
    IDU  go to state 36


State 49

   28 E: E EQUAL_EQUAL . R

    MINUS         shift, and go to state 12
    NOT           shift, and go to state 13
    PLUS_PLUS     shift, and go to state 14
    MINUS_MINUS   shift, and go to state 15
    ID            shift, and go to state 16
    STRINGVAL     shift, and go to state 17
    TRUE          shift, and go to state 18
    FALSE         shift, and go to state 19
    CHARACTER     shift, and go to state 20
    NUMERALFLOAT  shift, and go to state 21
    NUMERALINT    shift, and go to state 22

    R    go to state 73
    NUM  go to state 28
    IDU  go to state 36


State 50

   30 E: E PLUS . R

    MINUS         shift, and go to state 12
    NOT           shift, and go to state 13
    PLUS_PLUS     shift, and go to state 14
    MINUS_MINUS   shift, and go to state 15
    ID            shift, and go to state 16
    STRINGVAL     shift, and go to state 17
    TRUE          shift, and go to state 18
    FALSE         shift, and go to state 19
    CHARACTER     shift, and go to state 20
    NUMERALFLOAT  shift, and go to state 21
    NUMERALINT    shift, and go to state 22

    R    go to state 74
    NUM  go to state 28
    IDU  go to state 36


State 51

   31 E: E MINUS . R

    MINUS         shift, and go to state 12
    NOT           shift, and go to state 13
    PLUS_PLUS     shift, and go to state 14
    MINUS_MINUS   shift, and go to state 15
    ID            shift, and go to state 16
    STRINGVAL     shift, and go to state 17
    TRUE          shift, and go to state 18
    FALSE         shift, and go to state 19
    CHARACTER     shift, and go to state 20
    NUMERALFLOAT  shift, and go to state 21
    NUMERALINT    shift, and go to state 22

    R    go to state 75
    NUM  go to state 28
    IDU  go to state 36


State 52

   32 E: E TIMES . R

    MINUS         shift, and go to state 12
    NOT           shift, and go to state 13
    PLUS_PLUS     shift, and go to state 14
    MINUS_MINUS   shift, and go to state 15
    ID            shift, and go to state 16
    STRINGVAL     shift, and go to state 17
    TRUE          shift, and go to state 18
    FALSE         shift, and go to state 19
    CHARACTER     shift, and go to state 20
    NUMERALFLOAT  shift, and go to state 21
    NUMERALINT    shift, and go to state 22

    R    go to state 76
    NUM  go to state 28
    IDU  go to state 36


State 53

   33 E: E DIVIDE . R

    MINUS         shift, and go to state 12
    NOT           shift, and go to state 13
    PLUS_PLUS     shift, and go to state 14
    MINUS_MINUS   shift, and go to state 15
    ID            shift, and go to state 16
    STRINGVAL     shift, and go to state 17
    TRUE          shift, and go to state 18
    FALSE         shift, and go to state 19
    CHARACTER     shift, and go to state 20
    NUMERALFLOAT  shift, and go to state 21
    NUMERALINT    shift, and go to state 22

    R    go to state 77
    NUM  go to state 28
    IDU  go to state 36


State 54

   21 S: E SEMI_COLON .

    $default  reduce using rule 21 (S)


State 55

   36 R: R PLUS_PLUS .

    $default  reduce using rule 36 (R)


State 56

   38 R: R MINUS_MINUS .

    $default  reduce using rule 38 (R)


State 57

   19 S: IDU EQUALS . E SEMI_COLON

    MINUS         shift, and go to state 12
    NOT           shift, and go to state 13
    PLUS_PLUS     shift, and go to state 14
    MINUS_MINUS   shift, and go to state 15
    ID            shift, and go to state 16
    STRINGVAL     shift, and go to state 17
    TRUE          shift, and go to state 18
    FALSE         shift, and go to state 19
    CHARACTER     shift, and go to state 20
    NUMERALFLOAT  shift, and go to state 21
    NUMERALINT    shift, and go to state 22

    E    go to state 78
    R    go to state 27
    NUM  go to state 28
    IDU  go to state 36


State 58

   11 T: BOOLEAN .

    $default  reduce using rule 11 (T)


State 59

   10 T: CHAR .

    $default  reduce using rule 10 (T)


State 60

    8 T: INTEGER .

    $default  reduce using rule 8 (T)


State 61

   12 T: STRING .

    $default  reduce using rule 12 (T)


State 62

    9 T: FLOAT .

    $default  reduce using rule 9 (T)


State 63

    6 DV: VAR LI COLON T . SEMI_COLON

    SEMI_COLON  shift, and go to state 79


State 64

   15 LI: LI COMMA IDD .

    $default  reduce using rule 15 (LI)


State 65

   17 S: IF LEFT_PARENTHESIS E . RIGHT_PARENTHESIS S ENDIF
   18  | IF LEFT_PARENTHESIS E . RIGHT_PARENTHESIS S ELSE S ENDIF
   22 E: E . AND R
   23  | E . OR R
   24  | E . LESS_THAN R
   25  | E . GREATER_THAN R
   26  | E . LESS_OR_EQUAL R
   27  | E . GREATER_OR_EQUAL R
   28  | E . EQUAL_EQUAL R
   29  | E . NOT_EQUAL R
   30  | E . PLUS R
   31  | E . MINUS R
   32  | E . TIMES R
   33  | E . DIVIDE R

    AND                shift, and go to state 42
    OR                 shift, and go to state 43
    LESS_THAN          shift, and go to state 44
    GREATER_THAN       shift, and go to state 45
    LESS_OR_EQUAL      shift, and go to state 46
    GREATER_OR_EQUAL   shift, and go to state 47
    NOT_EQUAL          shift, and go to state 48
    EQUAL_EQUAL        shift, and go to state 49
    PLUS               shift, and go to state 50
    MINUS              shift, and go to state 51
    TIMES              shift, and go to state 52
    DIVIDE             shift, and go to state 53
    RIGHT_PARENTHESIS  shift, and go to state 80


State 66

   22 E: E AND R .
   36 R: R . PLUS_PLUS
   38  | R . MINUS_MINUS

    PLUS_PLUS    shift, and go to state 55
    MINUS_MINUS  shift, and go to state 56

    $default  reduce using rule 22 (E)


State 67

   23 E: E OR R .
   36 R: R . PLUS_PLUS
   38  | R . MINUS_MINUS

    PLUS_PLUS    shift, and go to state 55
    MINUS_MINUS  shift, and go to state 56

    $default  reduce using rule 23 (E)


State 68

   24 E: E LESS_THAN R .
   36 R: R . PLUS_PLUS
   38  | R . MINUS_MINUS

    PLUS_PLUS    shift, and go to state 55
    MINUS_MINUS  shift, and go to state 56

    $default  reduce using rule 24 (E)


State 69

   25 E: E GREATER_THAN R .
   36 R: R . PLUS_PLUS
   38  | R . MINUS_MINUS

    PLUS_PLUS    shift, and go to state 55
    MINUS_MINUS  shift, and go to state 56

    $default  reduce using rule 25 (E)


State 70

   26 E: E LESS_OR_EQUAL R .
   36 R: R . PLUS_PLUS
   38  | R . MINUS_MINUS

    PLUS_PLUS    shift, and go to state 55
    MINUS_MINUS  shift, and go to state 56

    $default  reduce using rule 26 (E)


State 71

   27 E: E GREATER_OR_EQUAL R .
   36 R: R . PLUS_PLUS
   38  | R . MINUS_MINUS

    PLUS_PLUS    shift, and go to state 55
    MINUS_MINUS  shift, and go to state 56

    $default  reduce using rule 27 (E)


State 72

   29 E: E NOT_EQUAL R .
   36 R: R . PLUS_PLUS
   38  | R . MINUS_MINUS

    PLUS_PLUS    shift, and go to state 55
    MINUS_MINUS  shift, and go to state 56

    $default  reduce using rule 29 (E)


State 73

   28 E: E EQUAL_EQUAL R .
   36 R: R . PLUS_PLUS
   38  | R . MINUS_MINUS

    PLUS_PLUS    shift, and go to state 55
    MINUS_MINUS  shift, and go to state 56

    $default  reduce using rule 28 (E)


State 74

   30 E: E PLUS R .
   36 R: R . PLUS_PLUS
   38  | R . MINUS_MINUS

    PLUS_PLUS    shift, and go to state 55
    MINUS_MINUS  shift, and go to state 56

    $default  reduce using rule 30 (E)


State 75

   31 E: E MINUS R .
   36 R: R . PLUS_PLUS
   38  | R . MINUS_MINUS

    PLUS_PLUS    shift, and go to state 55
    MINUS_MINUS  shift, and go to state 56

    $default  reduce using rule 31 (E)


State 76

   32 E: E TIMES R .
   36 R: R . PLUS_PLUS
   38  | R . MINUS_MINUS

    PLUS_PLUS    shift, and go to state 55
    MINUS_MINUS  shift, and go to state 56

    $default  reduce using rule 32 (E)


State 77

   33 E: E DIVIDE R .
   36 R: R . PLUS_PLUS
   38  | R . MINUS_MINUS

    PLUS_PLUS    shift, and go to state 55
    MINUS_MINUS  shift, and go to state 56

    $default  reduce using rule 33 (E)


State 78

   19 S: IDU EQUALS E . SEMI_COLON
   22 E: E . AND R
   23  | E . OR R
   24  | E . LESS_THAN R
   25  | E . GREATER_THAN R
   26  | E . LESS_OR_EQUAL R
   27  | E . GREATER_OR_EQUAL R
   28  | E . EQUAL_EQUAL R
   29  | E . NOT_EQUAL R
   30  | E . PLUS R
   31  | E . MINUS R
   32  | E . TIMES R
   33  | E . DIVIDE R

    AND               shift, and go to state 42
    OR                shift, and go to state 43
    LESS_THAN         shift, and go to state 44
    GREATER_THAN      shift, and go to state 45
    LESS_OR_EQUAL     shift, and go to state 46
    GREATER_OR_EQUAL  shift, and go to state 47
    NOT_EQUAL         shift, and go to state 48
    EQUAL_EQUAL       shift, and go to state 49
    PLUS              shift, and go to state 50
    MINUS             shift, and go to state 51
    TIMES             shift, and go to state 52
    DIVIDE            shift, and go to state 53
    SEMI_COLON        shift, and go to state 81


State 79

    6 DV: VAR LI COLON T SEMI_COLON .

    $default  reduce using rule 6 (DV)


State 80

   17 S: IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS . S ENDIF
   18  | IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS . S ELSE S ENDIF

    IF            shift, and go to state 11
    MINUS         shift, and go to state 12
    NOT           shift, and go to state 13
    PLUS_PLUS     shift, and go to state 14
    MINUS_MINUS   shift, and go to state 15
    LEFT_BRACES   shift, and go to state 2
    ID            shift, and go to state 16
    STRINGVAL     shift, and go to state 17
    TRUE          shift, and go to state 18
    FALSE         shift, and go to state 19
    CHARACTER     shift, and go to state 20
    NUMERALFLOAT  shift, and go to state 21
    NUMERALINT    shift, and go to state 22

    B    go to state 23
    S    go to state 82
    E    go to state 26
    R    go to state 27
    NUM  go to state 28
    IDU  go to state 29


State 81

   19 S: IDU EQUALS E SEMI_COLON .

    $default  reduce using rule 19 (S)


State 82

   17 S: IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS S . ENDIF
   18  | IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS S . ELSE S ENDIF

    ELSE   shift, and go to state 83
    ENDIF  shift, and go to state 84


State 83

   18 S: IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS S ELSE . S ENDIF

    IF            shift, and go to state 11
    MINUS         shift, and go to state 12
    NOT           shift, and go to state 13
    PLUS_PLUS     shift, and go to state 14
    MINUS_MINUS   shift, and go to state 15
    LEFT_BRACES   shift, and go to state 2
    ID            shift, and go to state 16
    STRINGVAL     shift, and go to state 17
    TRUE          shift, and go to state 18
    FALSE         shift, and go to state 19
    CHARACTER     shift, and go to state 20
    NUMERALFLOAT  shift, and go to state 21
    NUMERALINT    shift, and go to state 22

    B    go to state 23
    S    go to state 85
    E    go to state 26
    R    go to state 27
    NUM  go to state 28
    IDU  go to state 29


State 84

   17 S: IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS S ENDIF .

    $default  reduce using rule 17 (S)


State 85

   18 S: IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS S ELSE S . ENDIF

    ENDIF  shift, and go to state 86


State 86

   18 S: IF LEFT_PARENTHESIS E RIGHT_PARENTHESIS S ELSE S ENDIF .

    $default  reduce using rule 18 (S)
